---
import Section from "@/components/Section.astro";
import GitHub from "@/icons/hero/GitHub.astro";
import { SKILLS_ICONS } from "@/records.astro";
import { validateHighlight } from "@/services/validateHighliht";

import { projects } from "@cv";
---

{
  projects.length ? (
    <Section title="Proyectos">
      <ul>
        {projects.map(({ name, description, url, highlights, github }) => {
          return (
            <li>
              <article>
                <header>
                  <div class="contenedorHeader">
                    {url ? (
                      <a
                        class="tituloProyecto"
                        href={url}
                        title={`Ver el proyecto: ${name}`}
                        target="_blank"
                        rel="noopener noreferrer"
                      >
                        <h3>{name}</h3>
                      </a>
                    ) : (
                      <span
                        class="tituloNoRef"
                        title={`No se puede acceder al despliegue del proyecto ${name}`}
                      >
                        <h3>{name}</h3>
                      </span>
                    )}
                    {github && (
                      <a
                        class="contenedorGitHub"
                        href={github}
                        target="_blank"
                        title={`Ver cÃ³digo fuente del proyecto ${name}`}
                      >
                        <GitHub />
                      </a>
                    )}
                  </div>
                  <p>{description}</p>
                </header>
                <footer>
                  <div class="divHighliht">
                    {highlights.map((highlight) => {
                      const iconName = validateHighlight(highlight);
                      let IconFinal;
                      const Icon =
                        SKILLS_ICONS[iconName] !== undefined
                          ? (IconFinal = SKILLS_ICONS[iconName])
                          : (IconFinal = SKILLS_ICONS["Generic"]);
                      return (
                        <span>
                          {IconFinal && <Icon />}
                          {highlight}
                        </span>
                      );
                    })}
                  </div>
                </footer>
              </article>
            </li>
          );
        })}
      </ul>
    </Section>
  ) : null
}

<style>
  ul {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    grid-auto-rows: 1fr;
    gap: 1rem;
    justify-content: center;
  }

  article {
    gap: 1rem;
    border: var(--borderCard);
    border-radius: var(--borderRadius);
    padding: 1rem;
    height: 100%;
    box-shadow: var(--shadowCard);
  }

  header {
    display: block;
  }
  .contenedorHeader {
    display: flex;
    gap: 0.25rem;
    align-items: center;
    justify-content: space-between;
    padding-bottom: 0.5rem;
    min-height: 36px;
  }

  .contenedorGitHub {
    border: var(--borderButton);
    border-radius: var(--borderRadius);
    padding: 0.3rem;
    display: flex;
  }

  .contenedorGitHub:hover {
    background: var(--bgButtonHover);
    border-color: var(--colorBorderButtonHover);
    color: var(--colorButtonHover);
  }

  a {
    display: inline-flex;
    color: var(--colorButton);
  }

  .tituloNoRef {
    padding: 0;
  }
  .tituloNoRef h3:hover {
    color: var(--colorTitleElement);
    text-decoration: none;
  }

  .tituloProyecto:hover {
    text-decoration: underline;
  }

  a:hover {
    color: var(--colorLinkHover);
  }

  .divHighliht {
    display: flex;
    padding-inline: var(--paddingXGeneric);
    flex-wrap: wrap;
    gap: 0.5rem 1rem;
  }

  p {
    font-size: 0.75rem;
    line-height: 1.1rem;
    margin-bottom: 0.5rem;
  }

  @media (max-width: 660px) {
    ul {
      padding-inline: 0;
    }
  }

  @media print {
    ul {
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    }
    a span {
      display: none;
    }

    .contenedorGitHub {
      display: none;
    }

    .contenedorHeader {
      padding-bottom: 0.5rem;
    }
  }
</style>
