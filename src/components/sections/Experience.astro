---
import Section from "@/components/Section.astro";
import { SKILLS_ICONS } from "@/records.astro";
import { validateHighlight } from "@/services/validateHighliht";

import { work } from "@cv";
---

{
  work.length ? (
    <Section title="Experiencia Laboral">
      <ul>
        {work.map(
          ({
            name,
            position,
            url,
            startDate,
            endDate,
            summary,
            highlights,
          }: {
            name: string;
            position: string;
            url: string | null;
            startDate: string;
            endDate: string | null;
            summary: string;
            highlights: string[];
          }) => {
            const startYear = new Date(startDate).getFullYear();
            const endYear =
              endDate != null ? new Date(endDate).getFullYear() : "Actualmente";
            return (
              <li>
                <article>
                  <header>
                    <div id="divPosition">
                      {url != null ? (
                        <a
                          href={url}
                          title={`Ver la Empresa: ${name}`}
                          target="_blank"
                          rel="noopener noreferrer"
                        >
                          <h3 class="titulo">{name}</h3>
                        </a>
                      ) : (
                        <h3>{name}</h3>
                      )}
                      <h4>{position}</h4>
                    </div>
                    <time>
                      {startYear} - {endYear}
                    </time>
                  </header>
                  <footer>
                    <p>{summary}</p>
                    <div id="divHighliht">
                      {highlights.map((highlight) => {
                        const iconName = validateHighlight(highlight);

                        const Icon = SKILLS_ICONS[iconName];

                        const IconFinal = !SKILLS_ICONS[Icon]
                          ? SKILLS_ICONS["Generic"]
                          : SKILLS_ICONS[Icon];
                        return (
                          <span>
                            {IconFinal && <Icon />}
                            {highlight}
                          </span>
                        );
                      })}
                    </div>
                  </footer>
                </article>
              </li>
            );
          }
        )}
      </ul>
    </Section>
  ) : null
}

<style>
  article {
    padding-top: 0.3rem;
  }

  div {
    display: flex;
    gap: 1rem;
    align-items: center;
  }

  #divHighliht {
    display: flex;
    padding-inline: 0.5rem;
    flex-wrap: wrap;
    gap: 0.5rem 1rem;
  }

  @media (max-width: 800px) {
    ul {
      padding: 0;
    }
    #divPosition {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }

    header {
      flex-direction: column-reverse;
      gap: 0.2rem;
    }

    footer {
      padding-inline: 0;
    }
    #divHighliht {
      padding-inline: 0rem;
    }
  }
</style>
