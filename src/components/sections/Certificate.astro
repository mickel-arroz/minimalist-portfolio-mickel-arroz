---
import Section from "@/components/Section.astro";
import { SKILLS_ICONS } from "@/records.astro";
import { validateHighlight } from "@/services/validateHighliht";

import { certificates } from "@cv";
---

{
  certificates.length ? (
    <Section title="Certificados">
      <ul>
        {certificates.map(
          ({
            name,
            url,
            date,
            issuer,
            summary,
            issuerUrl,
            highlights,
          }: {
            name: string;
            url: string;
            date: string;
            issuer: string;
            summary: string;
            issuerUrl: string | null;
            highlights: string[];
          }) => {
            const startYear = new Date(date).getFullYear();
            const startMonth = new Date(date).getMonth() + 1;
            return (
              <li>
                <article>
                  <header>
                    <div id="divHeader">
                      <a
                        href={url}
                        target="_blank"
                        title={`Ver el Certificado de ${name}`}
                        rel="noopener noreferrer"
                      >
                        <h3>{name}</h3>
                      </a>
                      <a
                        href={issuerUrl}
                        target="_blank"
                        title={`Ir a la pagina de ${issuer}`}
                        rel="noopener noreferrer"
                      >
                        <h4>{issuer}</h4>
                      </a>
                    </div>
                    <time>
                      {startMonth}/{startYear}
                    </time>
                  </header>
                  <footer>
                    <p>{summary}</p>
                    <div id="divHighliht">
                      {highlights.map((highlight) => {
                        const iconName = validateHighlight(highlight);

                        let IconFinal;
                        const Icon =
                          SKILLS_ICONS[iconName] !== undefined
                            ? (IconFinal = SKILLS_ICONS[iconName])
                            : (IconFinal = SKILLS_ICONS["Generic"]);
                        return (
                          <span>
                            {IconFinal && <Icon />}
                            {highlight}
                          </span>
                        );
                      })}
                    </div>
                  </footer>
                </article>
              </li>
            );
          }
        )}
      </ul>
    </Section>
  ) : null
}

<style>
  ul {
    flex-direction: column;
  }

  article {
    padding-top: 0.3rem;
  }

  div {
    display: flex;
    gap: 1.5rem;
  }

  #divHighliht {
    display: flex;
    padding-inline: 0.5rem;
    flex-wrap: wrap;
    gap: 0.5rem 1rem;
  }

  @media (max-width: 800px) {
    ul,
    p {
      padding: 0;
    }

    #divHeader {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }

    header {
      flex-direction: column-reverse;
      gap: 0.2rem;
    }

    footer {
      padding-inline: 0;
    }

    #divHighliht {
      padding-inline: 0rem;
    }
  }
</style>
