---
import Section from "@/components/Section.astro";
import ExternalLink from "@/icons/general/external-link.astro";
import { SKILLS_ICONS } from "@/records.astro";
import { validateHighlight } from "@/services/validateHighliht";
import ViewMoreButton from "@/components/ViewMoreButton.astro";

import { certificates } from "@cv";

const primaryLength = certificates.filter(
  (certificate) => certificate.type == "primary"
).length;

let countCertificates = 0;
---

{
  certificates.length ? (
    <Section title="Certificados">
      <ul class="section__list">
        {certificates.map(
          ({
            name,
            url,
            type,
            date,
            issuer,
            summary,
            issuerUrl,
            highlights,
          }: {
            name: string;
            url: string;
            type: string;
            date: string;
            issuer: string;
            summary: string;
            issuerUrl: string | null;
            highlights: string[];
          }) => {
            if (primaryLength >= 3) {
              if (type == "primary") countCertificates++;
            } else {
              countCertificates++;
            }

            if (3 >= countCertificates) {
              const startYear = new Date(date).getFullYear();
              const startMonth = new Date(date).getMonth() + 1;

              return (primaryLength >= 3 && type == "primary") ||
                primaryLength < 3 ? (
                <li class="list__element">
                  <article class="element__card">
                    <header class="element__card__header">
                      <div class="header__flex-title">
                        <a
                          class="card__link--title"
                          href={url}
                          target="_blank"
                          title={`Ver el Certificado de ${name}`}
                          rel="noopener noreferrer"
                        >
                          <h3 class="card__title">
                            {name}
                            <div class="title__externalLink">
                              <ExternalLink />
                            </div>
                          </h3>
                        </a>
                        <a
                          class="card__link--entity"
                          href={issuerUrl}
                          target="_blank"
                          title={`Ir a la pagina de ${issuer}`}
                          rel="noopener noreferrer"
                        >
                          <h4 class="card__entity">{issuer}</h4>
                        </a>
                      </div>
                      <time class="card__date">
                        {startMonth}/{startYear}
                      </time>
                    </header>
                    <footer class="card__footer">
                      <p class="card__summary">{summary}</p>
                      <div class="footer__list">
                        {highlights.map((highlight) => {
                          const iconName = validateHighlight(highlight);

                          let IconFinal;
                          const Icon =
                            SKILLS_ICONS[iconName] !== undefined
                              ? (IconFinal = SKILLS_ICONS[iconName])
                              : (IconFinal = SKILLS_ICONS["Generic"]);
                          return (
                            <span class="footer__list__element">
                              {IconFinal && <Icon />}
                              {highlight}
                            </span>
                          );
                        })}
                      </div>
                    </footer>
                  </article>
                </li>
              ) : null;
            }
          }
        )}
        {certificates.length > 3 && (
          <ViewMoreButton
            text="Certificados"
            url="allCertificates"
          />
        )}
      </ul>
    </Section>
  ) : null
}

<style>
  .section__list {
    flex-direction: column;
  }

  .list__element {
    break-inside: avoid;
  }

  .element__card {
    padding-top: 0.3rem;
  }

  .header__flex-title {
    display: flex;
    gap: 1.5rem;
  }

  .footer__list {
    display: flex;
    padding-inline: 0.5rem;
    flex-wrap: wrap;
    gap: 0.5rem 1rem;
  }

  @media (max-width: 845px) {
    .section__list,
    .card__summary {
      padding: 0;
    }

    .header__flex-title {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }

    .element__card__header {
      flex-direction: column-reverse;
      gap: 0.2rem;
    }

    .card__footer {
      padding-inline: 0;
    }

    .footer__list {
      padding-inline: 0rem;
    }
  }
</style>
